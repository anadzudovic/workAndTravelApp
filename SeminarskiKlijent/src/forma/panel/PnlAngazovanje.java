package forma.panel;

import domen.Angazovanje;
import domen.OpstaDomenskaKlasa;
import domen.Poslodavac;
import domen.RadnoMesto;
import domen.StatusUgovora;
import domen.Student;
import forma.FrmDialog;
import forma.FrmForma;
import forma.GlavnaForma;
import forma.IPanel;
import forma.ModForme;
import forma.model.ModelTabeleAngazovanje;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import kontroler.Kontroler;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author User
 */
public class PnlAngazovanje extends javax.swing.JPanel implements IPanel {

    Student s;
    RadnoMesto rm;
    ModForme mod;
    ModelTabeleAngazovanje model;
    List<RadnoMesto> radnaMesta = new LinkedList<>();

    /**
     * Creates new form PnlUnosAngazovanja
     *
     * @param modForme
     */
    public PnlAngazovanje(ModForme modForme) {

        mod = modForme;
        initComponents();
        pripremiFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblImePrezime = new javax.swing.JLabel();
        lblDatumRodjenja = new javax.swing.JLabel();
        lblJMBG = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblNaziv = new javax.swing.JLabel();
        lblGrad = new javax.swing.JLabel();
        lblTip = new javax.swing.JLabel();
        lblOd = new javax.swing.JLabel();
        lblDo = new javax.swing.JLabel();
        lblSatnica = new javax.swing.JLabel();
        lblNapojnica = new javax.swing.JLabel();
        btnIzborRM = new javax.swing.JButton();
        btnIzborStudenta = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbHrana = new javax.swing.JComboBox<>();
        cbSmestaj = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtStatusUgovora = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        pnl1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAngazovanja = new javax.swing.JTable();
        btnObrisi = new javax.swing.JButton();
        btnDetalji = new javax.swing.JButton();
        btnUnos = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Podaci o studentu"));

        lblImePrezime.setText("Ime i prezime:");

        lblDatumRodjenja.setText("Datum rodjenja:");

        lblJMBG.setText("JMBG:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImePrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImePrezime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDatumRodjenja)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblJMBG)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Podaci o radnom mestu"));

        lblNaziv.setText("Naziv kompanije:");

        lblGrad.setText("Grad:");

        lblTip.setText("Tip radnog mesta:");

        lblOd.setText("Datum od:");

        lblDo.setText("Datum do:");

        lblSatnica.setText("Satnica:");

        lblNapojnica.setText("Napojnica:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNaziv)
                    .addComponent(lblGrad)
                    .addComponent(lblTip)
                    .addComponent(lblOd)
                    .addComponent(lblDo)
                    .addComponent(lblNapojnica)
                    .addComponent(lblSatnica))
                .addGap(0, 304, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNaziv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblGrad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblOd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSatnica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(lblNapojnica))
        );

        btnIzborRM.setText("Izaberi radno mesto");
        btnIzborRM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzborRMActionPerformed(evt);
            }
        });

        btnIzborStudenta.setText("Izaberi studenta");
        btnIzborStudenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzborStudentaActionPerformed(evt);
            }
        });

        jLabel1.setText("Besplatna hrana:");

        jLabel2.setText("Besplatan smeštaj:");

        cbHrana.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "true", "false", " ", " " }));

        cbSmestaj.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "true", "false", " ", " " }));

        jLabel3.setText("Status ugovora:");

        txtStatusUgovora.setEditable(false);
        txtStatusUgovora.setText("Važeći");

        btnSacuvaj.setText("Sačuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Poništi");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        pnl1.setBorder(javax.swing.BorderFactory.createTitledBorder("Angazovanja"));

        tblAngazovanja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblAngazovanja);

        btnObrisi.setText("Obriši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnDetalji.setText("Prikazi detalje");
        btnDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl1Layout = new javax.swing.GroupLayout(pnl1);
        pnl1.setLayout(pnl1Layout);
        pnl1Layout.setHorizontalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDetalji, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );
        pnl1Layout.setVerticalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnDetalji)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnObrisi)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        btnUnos.setText("Unesi");
        btnUnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnIzborRM, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(cbHrana, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbSmestaj, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnIzborStudenta, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtStatusUgovora, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(170, 170, 170)
                                .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(308, 308, 308)
                        .addComponent(btnUnos, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel1, jPanel2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzborRM)
                    .addComponent(btnIzborStudenta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cbHrana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbSmestaj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtStatusUgovora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnIzmeni))
                .addGap(9, 9, 9)
                .addComponent(btnUnos)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(51, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSacuvaj)
                        .addGap(95, 95, 95))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        List<Angazovanje> a = model.getLista();
        if (a.isEmpty()) {

            JOptionPane.showMessageDialog(this, "Niste uneli ni jedno angazovanje");
            return;
        }
        try {
            String poruka = Kontroler.getInstanca().unesiAngazovanja(a);
            JOptionPane.showMessageDialog(this, poruka);
            sesija.Sesija.getInstanca().setRadnaMesta(new LinkedList());
            ((FrmForma) SwingUtilities.getWindowAncestor(this)).dispose();
            if (((SwingUtilities.getWindowAncestor((FrmForma) SwingUtilities.getWindowAncestor(this)))) instanceof GlavnaForma) {
                return;
            }
            sesija.Sesija.getInstanca().setAngazovanja(a);
            (((FrmForma) SwingUtilities.getWindowAncestor((FrmForma) SwingUtilities.getWindowAncestor(this)))).getPanel().popuniPodatke();

        } catch (NullPointerException ex) {
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Neuspesno cuvanje");
            //Logger.getLogger(PnlStudent.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzborRMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzborRMActionPerformed
        PnlPretragaRadnihMesta panel = new PnlPretragaRadnihMesta();
        panel.izaberi();
//        FrmDialog forma = new FrmDialog((Frame) SwingUtilities.getWindowAncestor(this), true, panel);
        FrmForma forma = new FrmForma(panel);
        forma.setParent((Frame) SwingUtilities.getWindowAncestor(this));
        forma.setVisible(true);
    }//GEN-LAST:event_btnIzborRMActionPerformed

    private void btnIzborStudentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzborStudentaActionPerformed
        PnlPretragaStudenata panel = new PnlPretragaStudenata();
        panel.izaberi();
//        FrmDialog forma = new FrmDialog((Frame) SwingUtilities.getWindowAncestor(this), true, panel);
        FrmForma forma = new FrmForma(panel);
        forma.setParent((Frame) SwingUtilities.getWindowAncestor(this));
        forma.setVisible(true);
    }//GEN-LAST:event_btnIzborStudentaActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        Angazovanje a = (Angazovanje) sesija.Sesija.getInstanca().getMapa().get("trenutnoAngazovanje");
        a.setStatusUgovora(StatusUgovora.ponisten);

        try {
            String poruka = Kontroler.getInstanca().izmeniAngazovanje(a);
            sesija.Sesija.getInstanca().getMapa().put("trenutnoAngazovanje", a);
            JOptionPane.showMessageDialog(this, poruka);
            ((FrmDialog) SwingUtilities.getWindowAncestor(this)).dispose();

            (((FrmForma) SwingUtilities.getWindowAncestor((FrmDialog) SwingUtilities.getWindowAncestor(this)))).getPanel().popuniPodatke();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Neuspesna izmena");
            Logger.getLogger(PnlAngazovanje.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int index = tblAngazovanja.getSelectedRow();
        if (index == -1) {

            JOptionPane.showMessageDialog(this, "Morate izabrati red");
            return;
        }
        Angazovanje a = model.getLista().get(index);
        RadnoMesto rm2 = a.getRadnoMesto();
        

        for (int i = 0; i < sesija.Sesija.getInstanca().getRadnaMesta().size(); i++) {
            RadnoMesto rm1 = sesija.Sesija.getInstanca().getRadnaMesta().get(i);

            if (rm1.equals(rm2)) {

                rm1.setPreostaoBrojIzvrsioca(rm1.getPreostaoBrojIzvrsioca()+1);
              

                break;
            }

        }
        model.izbaci(a);

    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnUnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnosActionPerformed
        String h1 = (String) cbHrana.getSelectedItem();
        boolean h2 = false;
        if (h1.equals(true)) {
            h2 = true;
        }
        String s1 = (String) cbSmestaj.getSelectedItem();
        boolean s2 = false;
        if (s1.equals(true)) {
            s2 = true;
        }
        Angazovanje a = new Angazovanje(0, s2, h2, StatusUgovora.vazeci, s, rm);
        System.out.println(a);
        if (s == null || rm == null) {
            JOptionPane.showMessageDialog(this, "Morate uneti poslodavca i radno mesto");
            return;
        }

        Angazovanje novo = new Angazovanje();
        novo.setStudent(s);

        ArrayList<Angazovanje> lista = new ArrayList<>();

        try {
            lista = (ArrayList<Angazovanje>) kontroler.Kontroler.getInstanca().vratiAngazovanja(novo);
        } catch (Exception ex) {

        }
        try {
            if (!lista.isEmpty()) {
                for (Angazovanje s : lista) {
                    RadnoMesto stara = s.getRadnoMesto();
                    Calendar cal1 = Calendar.getInstance();
                    cal1.setTime(stara.getDatumOd());
                    Calendar cal2 = Calendar.getInstance();
                    cal2.setTime(rm.getDatumOd());
                    if (s.getStatusUgovora() == StatusUgovora.vazeci && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)) {

                        throw new Exception("Studentu je vec dodeljeno radno mesto za ovu godinu");

                    }

                }
            }

            for (Angazovanje k : model.getLista()) {
                RadnoMesto stara = k.getRadnoMesto();
                Calendar cal1 = Calendar.getInstance();
                cal1.setTime(stara.getDatumOd());
                Calendar cal2 = Calendar.getInstance();
                cal2.setTime(rm.getDatumOd());
                if (k.getStudent().equals(s) && k.getStatusUgovora() == StatusUgovora.vazeci && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)) {

                    throw new Exception("Studentu je vec dodeljeno radno mesto za ovu godinu");
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            s = null;
            rm = null;
            izmeniPolja();
            return;
        }
        model.ubaciUTabelu(a);
        rm.setPreostaoBrojIzvrsioca(rm.getPreostaoBrojIzvrsioca() - 1);
        if (sesija.Sesija.getInstanca().getRadnaMesta().contains(rm)) {
            for (int i = 0; i < sesija.Sesija.getInstanca().getRadnaMesta().size(); i++) {
                RadnoMesto rm1 = sesija.Sesija.getInstanca().getRadnaMesta().get(i);

                if (rm.equals(rm1)) {

                    rm1.setPreostaoBrojIzvrsioca(rm.getPreostaoBrojIzvrsioca());
                    break;
                }
            }
        } else {
            sesija.Sesija.getInstanca().getRadnaMesta().add(rm);
        }

        s = null;
        rm = null;
        izmeniPolja();
        sesija.Sesija.getInstanca().getMapa().put("trenutniStudent", null);
        sesija.Sesija.getInstanca().getMapa().put("trenutnoRM", null);

    }//GEN-LAST:event_btnUnosActionPerformed

    private void btnDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljiActionPerformed
        pripremiDialog(ModForme.pregled);
    }//GEN-LAST:event_btnDetaljiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetalji;
    private javax.swing.JButton btnIzborRM;
    private javax.swing.JButton btnIzborStudenta;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JButton btnUnos;
    private javax.swing.JComboBox<String> cbHrana;
    private javax.swing.JComboBox<String> cbSmestaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDatumRodjenja;
    private javax.swing.JLabel lblDo;
    private javax.swing.JLabel lblGrad;
    private javax.swing.JLabel lblImePrezime;
    private javax.swing.JLabel lblJMBG;
    private javax.swing.JLabel lblNapojnica;
    private javax.swing.JLabel lblNaziv;
    private javax.swing.JLabel lblOd;
    private javax.swing.JLabel lblSatnica;
    private javax.swing.JLabel lblTip;
    private javax.swing.JPanel pnl1;
    private javax.swing.JTable tblAngazovanja;
    private javax.swing.JTextField txtStatusUgovora;
    // End of variables declaration//GEN-END:variables

    private void pripremiFormu() {
        switch (mod) {
            case unos:
                btnSacuvaj.setVisible(true);
                btnIzmeni.setVisible(false);
                model = new ModelTabeleAngazovanje();
                tblAngazovanja.setModel(model);
                break;
            case izmena:
                pnl1.setVisible(false);
                btnUnos.setVisible(false);
                btnSacuvaj.setVisible(false);
                btnIzmeni.setVisible(true);
                btnIzborRM.setVisible(false);
                btnIzborStudenta.setVisible(false);
                popuniPolja(sesija.Sesija.getInstanca().getMapa().get("trenutnoAngazovanje"));
                break;
            case pregled:
                pnl1.setVisible(false);
                btnUnos.setVisible(false);
                popuniPolja(sesija.Sesija.getInstanca().getMapa().get("trenutnoAngazovanje"));
                btnSacuvaj.setVisible(false);
                btnIzmeni.setVisible(false);
                btnIzborRM.setVisible(false);
                btnIzborStudenta.setVisible(false);
                break;
        }
    }

    @Override
    public void popuniPodatke() {

        s = (Student) sesija.Sesija.getInstanca().getMapa().get("trenutniStudent");

        if (s != null) {

            lblImePrezime.setText("Ime i prezime: " + s.getImeIPrezime());
            lblDatumRodjenja.setText("Datum rodjenja: " + s.getDatumRodjenja());
            lblJMBG.setText("JMBG: " + s.getJMBG());
        }
        rm = (RadnoMesto) sesija.Sesija.getInstanca().getMapa().get("trenutnoRM");
        if (rm != null) {

            lblDo.setText("Datum do: " + rm.getDatumDo());
            lblOd.setText("Datum od: " + rm.getDatumOd());
            lblTip.setText("Tip radnog mesta: " + rm.getTipRadnogMesta().getNazivTipaRadnogMesta());
            lblSatnica.setText("Satnica: " + rm.getSatnica());
            lblNapojnica.setText("Napojnica: " + rm.isMogucaNapojnica());
            Poslodavac p = rm.getPoslodavac();
            lblNaziv.setText("Naziv: " + p.getNazivKompanije());
            lblGrad.setText("Grad: " + p.getGrad().toString());

        }
    }

    @Override
    public void popuniPolja(OpstaDomenskaKlasa odk) {
        Angazovanje a = (Angazovanje) odk;
        if (a != null) {
            boolean b1 = a.isBesplatanSmestaj();
            cbSmestaj.setSelectedItem("" + b1);
            boolean b2 = a.isBesplatanSmestaj();
            cbSmestaj.setSelectedItem("" + b2);
            txtStatusUgovora.setText(a.getStatusUgovora().toString());
            Student s = a.getStudent();
            lblImePrezime.setText("Ime i prezime: " + s.getImeIPrezime());
            lblDatumRodjenja.setText("Datum rodjenja: " + s.getDatumRodjenja());
            lblJMBG.setText("JMBG: " + s.getJMBG());
            RadnoMesto rm = a.getRadnoMesto();
            lblDo.setText("Datum do: " + rm.getDatumDo());
            lblOd.setText("Datum od: " + rm.getDatumOd());
            lblTip.setText("Tip radnog mesta: " + rm.getTipRadnogMesta().getNazivTipaRadnogMesta());
            lblSatnica.setText("Satnica: " + rm.getSatnica());
            lblNapojnica.setText("Napojnica: " + rm.isMogucaNapojnica());
            Poslodavac p = rm.getPoslodavac();
            lblNaziv.setText("Naziv: " + p.getNazivKompanije());
            lblGrad.setText("Grad: " + p.getGrad().toString());

        }
    }

    private void pripremiDialog(ModForme modForme) {
        if (modForme != ModForme.unos) {
            int index = tblAngazovanja.getSelectedRow();

            if (index == -1) {

                JOptionPane.showMessageDialog(this, "Morate izabrati red!");
                return;
            }
            Angazovanje rm = model.getLista().get(index);
            if (modForme == ModForme.izmena && rm.getStatusUgovora() == StatusUgovora.ponisten) {
                JOptionPane.showMessageDialog(this, "Angazovanje je vec ponisteno");
                return;
            }
            sesija.Sesija.getInstanca().getMapa().put("trenutnoAngazovanje", rm);
            PnlAngazovanje panel = new PnlAngazovanje(modForme);
            FrmDialog dialog = new FrmDialog((Frame) SwingUtilities.getWindowAncestor(this), true, panel);
            dialog.setVisible(true);
        }
    }

    private void izmeniPolja() {
        lblDo.setText("Datum do: ");
        lblOd.setText("Datum od: ");
        lblTip.setText("Tip radnog mesta: ");
        lblSatnica.setText("Satnica: ");
        lblNapojnica.setText("Napojnica: ");
        lblImePrezime.setText("Ime i prezime: ");
        lblDatumRodjenja.setText("Datum rodjenja: ");
        lblJMBG.setText("JMBG: ");
        lblNaziv.setText("Naziv: ");
        lblGrad.setText("Grad: ");

    }
}
