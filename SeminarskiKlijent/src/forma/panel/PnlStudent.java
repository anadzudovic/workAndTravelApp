/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forma.panel;

import com.sun.javafx.scene.SceneHelper;
import domen.Grad;
import domen.OpstaDomenskaKlasa;
import domen.Student;
import forma.FrmDialog;
import forma.FrmForma;
import forma.GlavnaForma;
import forma.IPanel;
import forma.ModForme;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import kontroler.Kontroler;

/**
 *
 * @author User
 */
public class PnlStudent extends javax.swing.JPanel implements IPanel {

    private ModForme model;

    /**
     * Creates new form FormaUnosStudenta
     */
    public PnlStudent(ModForme model) {
        initComponents();
        pripremiFormu(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtImeIPrezime = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTelefon = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEMail = new javax.swing.JTextField();
        txtJMBG = new javax.swing.JTextField();
        txtAdresa = new javax.swing.JTextField();
        txtBrLicneKarte = new javax.swing.JTextField();
        txtBrPasosa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnSacuvaj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        dpDatum = new datechooser.beans.DateChooserCombo();

        jLabel1.setText("Ime i prezime:");

        jLabel2.setText("Datum rodjenja:");

        jLabel3.setText("Kontakt telefon:");

        jLabel4.setText("E-mail adresa:");

        jLabel5.setText("JMBG:");

        jLabel6.setText("Broj lične karte:");

        jLabel7.setText("Broj pasoša:");

        jLabel8.setText("Adresa:");

        btnSacuvaj.setText("Sačuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        dpDatum.setLocale(new java.util.Locale("sr", "BA", ""));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(dpDatum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(txtImeIPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEMail, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtTelefon, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtJMBG, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtBrLicneKarte, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtBrPasosa, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtAdresa, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSacuvaj, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtImeIPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(dpDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(txtBrLicneKarte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBrPasosa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnIzmeni))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(btnSacuvaj))
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        String ime = txtImeIPrezime.getText();
        String email = txtEMail.getText();
        String telefon = txtTelefon.getText();
        String adresa = txtAdresa.getText();
        String brPas = txtBrPasosa.getText();
        String brLK = txtBrLicneKarte.getText();
        String jmbg = txtJMBG.getText();
        Date datum = new Date();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        try {
            datum = java.sql.Date.valueOf(format.format(dpDatum.getSelectedDate().getTime()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Morate uneti datum rodjenja");
            return;

        }
        boolean val = validacija(ime, datum, telefon, email, jmbg, brLK, brPas, adresa);
        if (val) {
            Student s = new Student(0, ime, datum, telefon, email, jmbg, brLK, brPas, adresa);
            try {
                String poruka = Kontroler.getInstanca().unesiStudenta(s);
                JOptionPane.showMessageDialog(this, poruka);
                sesija.Sesija.getInstanca().getMapa().put("trenutniStudent", s);
                ((FrmDialog) SwingUtilities.getWindowAncestor(this)).dispose();
                if (((SwingUtilities.getWindowAncestor((FrmDialog) SwingUtilities.getWindowAncestor(this)))) instanceof GlavnaForma) {
                    return;
                }
                
                (((FrmForma) SwingUtilities.getWindowAncestor((FrmDialog) SwingUtilities.getWindowAncestor(this)))).getPanel().popuniPodatke();
            } catch (NullPointerException e) {
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Neuspesno cuvanje");
                Logger.getLogger(PnlStudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        String ime = txtImeIPrezime.getText();
        String email = txtEMail.getText();
        String telefon = txtTelefon.getText();
        String adresa = txtAdresa.getText();
        String brPas = txtBrPasosa.getText();
        String brLK = txtBrLicneKarte.getText();
        String jmbg = txtJMBG.getText();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Date datum = java.sql.Date.valueOf(format.format(dpDatum.getSelectedDate().getTime()));
        int id = ((Student) sesija.Sesija.getInstanca().getMapa().get("trenutniStudent")).getSifraStudent();
        boolean val = validacija(ime, datum, telefon, email, jmbg, brLK, brPas, adresa);
        if (val) {
            Student s = new Student(id, ime, datum, telefon, email, jmbg, brLK, brPas, adresa);
            try {
                String poruka = Kontroler.getInstanca().izmeniStudenta(s);
                JOptionPane.showMessageDialog(this, poruka);
                sesija.Sesija.getInstanca().getMapa().put("trenutniStudent", s);
                ((FrmDialog) SwingUtilities.getWindowAncestor(this)).dispose();
                (((FrmForma) SwingUtilities.getWindowAncestor((FrmDialog) SwingUtilities.getWindowAncestor(this)))).getPanel().popuniPodatke();
            } catch (NullPointerException ex) {
                System.out.println("Greska");

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Neuspesna izmena");
                Logger.getLogger(PnlStudent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnSacuvaj;
    private datechooser.beans.DateChooserCombo dpDatum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtAdresa;
    private javax.swing.JTextField txtBrLicneKarte;
    private javax.swing.JTextField txtBrPasosa;
    private javax.swing.JTextField txtEMail;
    private javax.swing.JTextField txtImeIPrezime;
    private javax.swing.JTextField txtJMBG;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables

    public ModForme getModel() {
        return model;
    }

    public void setModel(ModForme model) {
        this.model = model;
    }

    private void pripremiFormu(ModForme model) {

        switch (model) {
            case unos:
                btnSacuvaj.setVisible(true);
                btnIzmeni.setVisible(false);
                break;
            case izmena:
                btnSacuvaj.setVisible(false);
                btnIzmeni.setVisible(true);
                popuniPolja(sesija.Sesija.getInstanca().getMapa().get("trenutniStudent"));
                break;
            case pregled:
                popuniPolja(sesija.Sesija.getInstanca().getMapa().get("trenutniStudent"));
                btnSacuvaj.setVisible(false);
                btnIzmeni.setVisible(false);
                txtAdresa.setEditable(false);
                txtBrLicneKarte.setEditable(false);
                txtBrPasosa.setEditable(false);
                txtEMail.setEditable(false);
                txtImeIPrezime.setEditable(false);
                txtJMBG.setEditable(false);
                txtTelefon.setEditable(false);
                dpDatum.setEnabled(false);

        }
    }

    @Override
    public void popuniPolja(OpstaDomenskaKlasa odk) {
        Student s = (Student) odk;
        txtAdresa.setText(s.getAdresa());
        txtBrLicneKarte.setText(s.getBrojLicneKarte());
        txtBrPasosa.setText(s.getBrojPasosa());
        txtEMail.setText(s.getElektronskaPosta());
        txtImeIPrezime.setText(s.getImeIPrezime());
        txtJMBG.setText(s.getJMBG());
        txtTelefon.setText(s.getKontaktTelefon());
        GregorianCalendar gc = new GregorianCalendar();
        gc.setTime(s.getDatumRodjenja());
        dpDatum.setSelectedDate(gc);

    }

    private boolean validacija(String ime, Date datum, String telefon, String email, String jmbg, String brLK, String brPas, String adresa) {
        if (ime.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate uneti ime i prezime");
            return false;
        }
        if (telefon.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate uneti kontakt telefon");
            return false;
        }
        if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate uneti email adresu");
            return false;

        }
        if (jmbg.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate uneti jmbg");
            return false;

        }
        String regex = "[0-9]+";

        if (!(jmbg.matches(regex))) {
            JOptionPane.showMessageDialog(this, "Pogresan format za jmbg");
            return false;
        }
        if (jmbg.length() != 13) {
            JOptionPane.showMessageDialog(this, "Pogresan format za jmbg");
            return false;
        }
        if (!email.contains("@")) {
            JOptionPane.showMessageDialog(this, "Pogresan format za email adresu");
            return false;
        }

        Calendar c = Calendar.getInstance();
        c.set(c.get(Calendar.YEAR) - 18, c.get(Calendar.MONTH), c.get(Calendar.DAY_OF_MONTH));
        if (datum.after(c.getTime())) {
            JOptionPane.showMessageDialog(this, "Student mora biti stariji od 18 godina");
            return false;
        }
        return true;
    }

}
